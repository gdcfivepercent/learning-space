抽象数据类型线性表的定义：

ADT List {
    数据对象：
    数据关系：
    基本操作：
        InitList(&L)
            操作结果：构造一个空的线性表 L。
        DestroyList(&L)
            初始条件：线性表 L 已存在。
            操作结果：销毁线性表 L 。
        ClearList(&L)
            初始条件：线性表 L 已存在。
            操作结果：将 L 重置为空表。
        ListEmpty(L)
            初始条件：线性表 L 已存在。
            操作结果：若 L 为空表，则返回真，否则返回假。
        ListLength(L)
            初始条件：线性表 L 已存在。
            操作结果：返回 L 中数据元素个数。
        GetElmt(L, i, &e)
            初始条件：线性表 L 已存在，1 <= i <= ListLength(L)
            操作结果：用 e 返回 L 中第 i 个数据元素的值。
        LocateElmt(L, e, compare())
            初始条件：线性表 L 已存在，compare() 是数据元素判定函数。
            操作结果：返回 L 中第 1 个与 e 满足关系 compare() 的数据元素的位序。若这样的
                      数据元素不存在，则返回值为 0。
        PriorElmt(L, cur_e, &pre_e)
            初始条件：线性表 L 已存在。
            操作结果：若 cur_e 是 L 的数据元素，且不是第一个，则用 pre_e 返回它的前驱，否则
                      操作失败，pre_e 无定义。
        NextElmt(L, cur_e, &next_e)
            初始条件：线性表 L 已存在。
            操作结果：若 cur_e 是 L 的数据元素，且不是最后一个，则用 next_e 返回它的后继，否
                      则操作失败，next_e 无定义。
        ListInsert(&L, i, e)
            初始条件：线性表 L 已存在，1 <= i <= ListLength(L)。
            操作结果：在 L 中第 i 个位置之前插入新的数据元素 e，L 的长度加 1。
        ListDelete(&L, i, &e)
            初始条件：线性表 L 已存在，1 <= i <= ListLength(L)。
            操作结果：删除 L 的第 i 个数据元素，并用 e 返回其值，L 的长度减 1。
        ListTraverse(L, visit())
            初始条件：线性表 L 已存在。
            操作结果：依次对 L 的第个数据元素调用函数 visit()。一旦 visit() 失败，则操作失败。
} ADT List
